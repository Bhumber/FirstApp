		Map
		
 Это метод массива.
 Он помогает преобразовать массив одних элементов в массив других элементов.
 
 Map принимает стрелочную функцию.
 
 Синтаксис:
 let newArray = 
	oldArray.map((элемент oldArray) => {
		if (уловие) {
			return то-то;
		} else {
			return ту-ту;
		}
	});
 
	Пример:
 У на сесть массив строк:
	let strigs = ['A', 'B', 'C'];
 Нам нужно преобразовать его в массив чисел:
	let nums = [1, 2, 3];
	
	
 ---------------------------------------------
 Вот как это работает:
	
	let strigs = ['A', 'B', 'C'];
	let x = 0;
	let nums = 
		strigs.map (() => {
			x++;
			return x;
		})
		
	- Эта функция будет вызываться 3 раза, тк массив strigs содержит 3 элемента.
	- Аргумент стрелочная функция, в данном случае, не принимает, тк в этом нет необходимости.
 ---------------------------------------------

	
	
	
 Можно использовать этот метод для множества видов преобразования:
 - Чисел в строки и обрато.
 - Числа в массив и обрато.
 - Массив в другой массив.
 - Объекты в массив и обрато.
 - Объекты в числа и обрато.
 - 'Dmitry' -> '<li>Dmitry</li>'.
		. . .
		
		
		
		
		
		
		

 let messData = [
        {id: '1', sms: "Hi"},
        {id: '2', sms: "Hello"},
        {id: '3', sms: "Privet"},
        {id: '4', sms: "How are you ?"},
        {id: '5', sms: "Kak dela ?"},
    ];

 let messElements = [
     <Mess sms={messData[0].sms} />,
     <Mess sms={messData[1].sms} />,
     <Mess sms={messData[2].sms} />,
     <Mess sms={messData[3].sms} />,
     <Mess sms={messData[4].sms} />
 ];
 
 let messElements = messData.map(messElementItem => <Mess sms={messElementItem.sms} />,)
 
 У нас есть массив messData. 
 Нам нужно получить массив messElements.
 Для этого мы использовали messData.map().