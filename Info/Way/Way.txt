Мое приложение
		Карта UI
---------------------------------------------	
			Карта UI:
    |index.js|
		|
	|App.js|
		|
	|BrowserRouter|
	  |
	  |-|Dialogs|-------|DialogsItem|
	  |        	 |		
	  |          -----|Message|
	  |
	  |-|Profile|-------|ProfileInfo|
	  |          |
	  |			  ----|MyPosts|
	  |					  |
	  |					|Post|  
	  |
	   -|Nav|
	  |
	   -|Header|
---------------------------------------------
 
		
---------------------------------------------	
			Карта BLL:
	|Data|
	  |
	  |-|DialogsData|--DialogsData.js
	  |
	  |-|MessagesData|--MessagesData.js
	  |
	   -|PostsData|--PostsData.js
---------------------------------------------	
 
 
 В BLL находятся данные:
 ---------------------------------------------
 PostsData.js:
 -  const postData = [
		{id: '1', message: 'Hi, how are you ?', like: '10'},
		{id: '2', message: 'Its my first post', like: '15'}
  ];
  
    export default postData;
 --------------------------------------------- 
 DialogsData.js:
 -  const dialogsData =  [
        {id: '1', name: 'Sasha'},
        {id: '2', name: 'Vitya'},
        {id: '3', name: 'Katya'},
        {id: '4', name: 'Sveta'},
        {id: '5', name: 'Oleg'},
    ];
	
	export default dialogsData;
 ---------------------------------------------	
 MessagesData.js:	
 -  const messData = [
        {id: '1', sms: "Hi"},
        {id: '2', sms: "Hello"},
        {id: '3', sms: "Privet"},
        {id: '4', sms: "How are you ?"},
        {id: '5', sms: "Kak dela ?"}
    ];
	
	export default messData;   
 ---------------------------------------------
 
 Передача этих данных моему приложению:
 
 - С начала нужно подключить эти js-файлы к index.js. 
   Для этого в index.js прописываем следующее:
		import dialogsData from './Data/DialogsData/DialogsData';
		import messData from './Data/MessagesData/MessagesData';
		import postData from './Data/PostsData/PostsData';

 - И подключаем App.js к index.js:
		import App from './App';
 
 - Затем передаем эти данные как атрибуты компоненты App.
	Прописываем в index.js:
		<App posts={postData} dialogs={dialogsData} messages={messData} />

 - Компонента App принимет эти данные через props.
	props - это объект, свойства которого атрибуты прописанны в компоненте App в index.js.(posts={postData} dialogs={dialogsData} messages={messData}).
    	<Route path='/profile' element={<Profile posts={props.posts} />} />
        <Route path='/dialogs/*' element={<Dialogs dialogs={props.dialogs} messages={props.messages} />} />
		
 - Далее нужно подключить дочерние элементы к App.js:
		import Profile from './Components/Profile/Profile';
		import Dialogs from './Components/Dialogs/Dialogs';
		
 - Profile.jsx и Dialogs.jsx получают данные чере props.
		
 - Profile.jsx:
		const Profile = (props) => {
			return (
				<div>
				  <ProfileInfo />
				  <MyPosts posts={props.posts} />
				</div>
			);
		}
		
		*Далее эти данные передаются MyPosts.jsx. Тоже через props.
		*В MyPosts.jsx определяется метод map объекта props, в какчестве параметра используется объект props:
			let post = props.posts.map(p => <Post message={p.message} like={p.like} />)
			
		*Затем этот метод вызывается.	
			return (
				<div className={classes.content}>
				<div>My posts 
				<div className={classes.sendPost}>
					<div className={classes.textArea}>
					<textarea placeholder="Your news..." wrap="off" ></textarea>
					</div>
					<div className={classes.sendButton}>
					<button>Add</button>
					</div>
				</div>
				<div className={classes.posts}>
					{ post }
				</div>
				</div>
				</div>
			);
			
 - В Dialogs.jsx определяется метод map объекта props, в какчестве параметра используется объект props:
		let dialogElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id} /> );
		let messElements = props.messages.map(m => <Message sms={m.sms} />,)
		
		*Далее этот метод вызывается:
			return (
				<div className={classes.dialogs}>
					<div className={classes.dialogsItem}>
						{dialogElements} 
					</div>

					<div className={classes.messages}>
						{messElements}
					</div>
				</div>
			);
   